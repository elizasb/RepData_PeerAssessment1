demo()
image()
demo(image)
setwd("~/Data Science Coursera/exdata/Proj1/ExData_Plotting2")
NEI <- readRDS("summarySCC_PM25.rds")
SCC <- readRDS("Source_Classification_Code.rds")
d<-subset(NEI,NEI$fips=="24510")
qplot(factor(type), data=d, geom="bar")
install.packages("ggplot2")
library(ggplot2)
d<-subset(NEI,NEI$fips=="24510")
qplot(factor(type), data=d, geom="bar")
d<-subset(NEI,NEI$fips=="24510")
qplot(factor(type), data=d, geom="bar")
tapply(bc$Emissions,list(bc$year,bc$type),sum)
bc<-d
tapply(bc$Emissions,list(bc$year,bc$type),sum)
t<-tapply(bc$Emissions,list(bc$year,bc$type),sum)
t<-tapply(bc$Emissions,list(bc$year,bc$type),sum)
qplot(factor(year), data=t, geom="bar", facets=.~type)
ftable(t)
data.frame(t)
qplot(factor(year), data=data.frame(t), geom="bar", facets=.~type)
as.data.frame(t)
qplot(factor(year), data=as.data.frame(t), geom="bar", facets=.~type)
q<-as.data.frame(t)
colnames(q)
qplot(factor(year), data=as.data.frame(q), geom="bar", facets=.~colnames(q))
as.data.frame.matrix(t)
t<-tapply(bc$Emissions,list(bc$year,bc$type),sum)
as.data.frame.matrix(t)
t.m<-melt(t)
library(reshape2)
t.m<-melt(t)
t.m
colnames(t.m)<-c("year","type","value")
qplot(factor(year),value, data=t.m, geom="bar", facets=.~type)
qplot(factor(year),value, data=t.m, geom="bar", facets=.~type, stat="identity")
str(t.m)
source('~/Data Science Coursera/exdata/Proj1/ExData_Plotting2/plot3.R')
install.packages("ggplot2")
head(SCC)
tail(SCC)
head(SCC)
str(SCC)
factors(SCC$EI.Sector)
factor(SCC$EI.Sector)
levels(SCC$EI.Sector)
cc<-grep('Comb Coal',SCC$EI.Sector)
cc
cc<-grep('(Coal)',SCC$EI.Sector)
cc
cc<-grep('(Coal)',SCC$EI.Sector,value=false)
cc<-grep('(Coal)',SCC$EI.Sector,value="false")
cc
cc<-grep('(Coal)',SCC$EI.Sector,value="true")
cc
cc<-grep('(Coal)&(Electric)',SCC$EI.Sector)
cc
cc<-grep('(Coal)&&(Electric)',SCC$EI.Sector)
cc
cc<-grep('(Coal&Electric)',SCC$EI.Sector)
cc
cc<-grep('(Electric&Coal)',SCC$EI.Sector)
cc
str(NEI)
SCC[cc,]
cc<-grep('(Coal)',SCC$EI.Sector,value="false")
SCC[cc,]
SCC.coal<-SCC[cc,"SCC"]
SCC.coal
str(NEI)
NEI.coal<-merge(NEI,SCC.coal,by.x="SCC",by.y="SCC")
str(SCC.coal)
colnames(SCC.coal)<-"SCC"
NEI.coal<-merge(NEI,SCC.coal,by.x="SCC")
str(SCC)
q<-as.data.frame(SCC.coal)
colnames(q)
NEI.coal<-merge(NEI,as.data.frame(SCC.coal),by.x="SCC",by.y="SCC.coal")
str(NEI.coal)
u<-unique(NEI.coal$SCC)
u
t<-tapply(NEI.coal$Emissions, NEI.coal$year, sum)
barplot(t,main="Annual PM2.5 Emissions for Coal Combustion-related Sources",
ylab="Total PM2.5 emissions (tons)",
col='red')
unique(SCC$EI.Sector)
cc<-grep('(Mobile)',SCC$EI.Sector)
SCC.mobile<-SCC[cc,]
summary(SCC.mobile)
cc<-grep('(Mobile.*Vehicles)',SCC$EI.Sector) #verified that all sources included "Fuel Comb"
SCC.mobile<-SCC[cc,]
summary(SCC.mobile)
unique(SCC.mobile$EI.Sector)
source('~/Data Science Coursera/exdata/Proj1/ExData_Plotting2/plot6.R')
View(t.m)
q<-subset(NEI.mv,NEI.mv$fips=="24510")
mv
SCC[mv,"short.name"]
unique(SCC[mv,EI.Sector])
unique(SCC[mv,"EI.Sector""])
)
""
unique(SCC[mv,"EI.Sector"])
str(SCC)
unique(SCC[mv,"Short.Name"])
summary(NEI.mv)
str(NEI.mv)
hist(NEI.mv$type)
hist(factor(NEI.mv$type))
hist(freq(NEI.mv$type))
table(NEI.mv$type)
t<-with(subset(NEI.mv,NEI.mv$fips=="24510"),tapply(Emissions,year,sum))
barplot(t,main="Annual PM2.5 Emissions for Baltimore City, MD for Motor Vehicle Sources",
ylab="Total PM2.5 emissions (tons)",
col='red')
source('~/Data Science Coursera/exdata/Proj1/ExData_Plotting2/plot6.R')
source('~/Data Science Coursera/exdata/Proj1/ExData_Plotting2/plot6.R')
source('~/Data Science Coursera/exdata/Proj1/ExData_Plotting2/plot6.R')
setwd("~/Data Science Coursera/RepData_PeerAssessment1")
activity<-read.csv('activity.csv')
str(activity)
timestamp<-as.POSIXlt(activity$date)
head(timestamp)
unique(activity$date)
str(activity)
summary(activity)
mean(activity$steps)
mean(activity$steps,na.rm=TRUE)
daytotal<-sapply(activity$steps,activity$date,total)
daytotal<-tapply(activity$steps,activity$date,total)
daytotal<-tapply(activity$steps,activity$date,sum)
daytotal<-tapply(activity$steps,activity$date,count)
daytotal<-tapply(activity$steps,activity$date,ct)
daytotal<-tapply(activity$steps,activity$date,mean, na.rm=TRUE)
daytotal
daytotal<-tapply(activity$steps,activity$date,sum)
mean(daytotal,na.rm=TRUE)
mean(activity$steps,na.rm=TRUE)*288
hist(daytotal)
median(daytotal)
median(daytotal,na.rm=TRUE)
abline(h=daytotal.mean)
daytotal.mean=mean(daytotal,na.rm=TRUE)
daytotal.median=median(daytotal,na.rm=TRUE)
abline(h=daytotal.mean)
abline(v=daytotal.mean)
abline(v=daytotal.mean,col="red")
abline(v=daytotal.median,col="blue")
str(activity)
interval.mean<-tapply(activity$steps,activity$interval,mean)
interval.mean<-tapply(activity$steps,activity$interval,mean,na.rm=TRUE)
t.mean<-tapply(activity$interval,activity$interval,mean,na.rm=TRUE)
t.mean
24*60/5
plot(t.mean)
plot(t.mean[1:10])
plot(levels(activity.interval),interval.mean,type="l")
plot(levels(activity$interval),interval.mean,type="l")
levels(activity$interval)
factors(activity$interval)
factor(activity$interval)
levels(factor(activity$interval))
plot(levels(as.factor(activity$interval)),interval.mean,type="l")
plot(levels(as.factor(activity$interval)),interval.mean,
type="l",
xlab="5-minute interval",
ylab="Steps",
main="Average daily activity pattern")
plot(interval.mean,
type="l",
xlab="5-minute interval",
ylab="Steps",
main="Average daily activity pattern")
levels(as.factor(activity$interval))
install.packages("lubridate")
i<-find(interval.mean==max(interval.mean))
i<-(interval.mean==max(interval.mean))
i
interval.levels<-levels(as.factor(activity$interval))
interval.levels[i]
interval.max<-interval.levels[interval.mean==max(interval.mean)]
interval.max
minutes(0:5)
minute(0:5)
library(lubridate)
minute(0:5)
minutes(0:5)
minutes(0:5:10)
minutes(seq(from=0,to=10,by=2))
minutes(seq(from=0,to=60*24,by=5))
x<-"09-01-01"
xt<-ymd(x)
m=minutes(seq(from=0,to=60*24,by=5))
xt<-ymd(x)+m
xt
plot(xt,interval.mean,
type="l",
xlab="5-minute interval",
ylab="Steps",
main="Average daily activity pattern")
plot(xt[1:288],interval.mean,
type="l",
xlab="5-minute interval",
ylab="Steps",
main="Average daily activity pattern")
plot(xt[1:288],interval.mean,
type="l",
xlab="5-minute interval",
ylab="Steps",
main="Average daily activity pattern")
plot(interval.mean,
type="l",
xlab="5-minute interval",
ylab="Steps",
main="Average daily activity pattern")
plot(xt,interval.mean,
type="l",
xlab="5-minute intervals",
ylab="Steps",
main="Average daily activity pattern")
m=minutes(seq(from=0,to=60*24-5,by=5))
xt<-ymd(x)+m
plot(xt,interval.mean,
type="l",
xlab="5-minute intervals",
ylab="Steps",
main="Average daily activity pattern")
max(interval.mean)
steps5min.max<-max(interval.mean)
interval.max<-interval.levels[interval.mean==steps5min.max]
steps5min.max
interval.max
abline(v=xt(interval.mean==steps5min.max))
abline(v=xt[interval.mean==steps5min.max])
summary(activity)
na.ct<-sum(is.na(activity$steps))
na.ct
i<-is.na(activity$steps)
intervals.df<-cbind(interval.levels,interval.mean)
str(intervals.df)
summary(intervals.df)
head(intervals.df)
head(intervals.df,rows=10)
summary(intervals.df)
data.merge=merge(activity,intervals.df,by.x="interval",by.y="interval.levels")
summary(data.merge)
head(data.merge)
data.merge<-merge(activity,intervals.df,by.x="interval",by.y="interval.levels")
activity.filled<-activity
activity.filled[missing,"steps"]=data.merge[missing,"interval.mean"]
data.merge<-merge(activity,intervals.df,by.x="interval",by.y="interval.levels")
activity.filled<-activity
activity.filled[missing,"steps"]<-data.merge[missing,"interval.mean"]
data.merge[missing,"interval.mean"]
missing<-which(is.na(activity$steps))
intervals.df<-cbind(interval.levels,interval.mean)
data.merge<-merge(activity,intervals.df,by.x="interval",by.y="interval.levels")
activity.filled<-activity
activity.filled[missing,"steps"]=data.merge[missing,"interval.mean"]
Data[na.idx,"x"] = r[na.idx,"x.Donor"]
head(activity.filled)
head(activity)
head(data.merge)
data.merge<-merge(activity,intervals.df,by.x="interval",by.y="interval.levels",
sort=FALSE)
head(data.merge)
data.merge<-merge(activity,intervals.df,by.x="interval",by.y="interval.levels",
sort=TRUE)
head(data.merge)
data.merge<-merge(activity,intervals.df,by.x="interval",by.y="interval.levels",
sort=FALSE)
head(data.merge)
tail(data.merge)
library(plyr)
data.merge<-join(activity,intervals.df,by.x="interval",by.y="interval.levels",
type=left)
intervals.df<-cbind(interval.levels,interval.mean,colnames=c("interval","interval.mean"))
data.merge<-join(activity,intervals.df,by="interval", type=left)
data.merge<-join(activity,intervals.df,by="interval", type="left")
case(activity)
class(activity)
case(activity)
data.merge<-join(activity,as.data.frame(intervals.df),by="interval", type="left")
activity.filled<-activity
intervals.df=data.frame(interval=interval.levels,interval.mean=interval.mean)
str(intervals.df)
data.merge<-join(activity,intervals.df,by="interval", type="left")
activity.filled<-activity
head(data.merge)
head(data.merge,n=10)
interval.df
intervals.df
data.merge<-join(activity,intervals.df,by="interval")
head(data.merge)
data.merge<-join(activity,intervals.df)
head(data.merge)
data.merge<-join(intervals.df,activity)
head(data.merge)
data.merge<-join(activity,intervals.df)
head(data.merge)
head(intervals.df)
str(intervals.df)
str(activity)
activity$interval<-as.factor(activity$interval)
str(activity)
data.merge<-join(activity,intervals.df,by="interval", type="left")
head(data.merge)
head(data.merge,n=20)
tail(data.merge,n=20)
head(activity)
activity<-read.csv('activity.csv')
head(activity)
head(activity,n=100)
activity$interval<-as.factor(activity$interval)
library("plyr")
data.merge<-join(activity,intervals.df,by="interval", type="left")
activity.filled<-activity
activity.filled[missing,"steps"]=data.merge[missing,"interval.mean"]
head(activity.filled)
nm<-which(!is.na(activity$steps))
nm[1]
data.merge[nm[1:10],]
data.merge[nm[1:100],]
plot(timestamp,activity$steps,type="l")
plot(activity$intervals,activity$steps,type="l")
str(activity)
plot(activity$intervals,activity$steps)
plot(activity$interval,activity$steps)
plot(activity$interval,activity$steps,type="l")
plot(activity$interval,activity$steps,type="l",color="red")
plot(activity$interval,activity$steps,type="l",color="red")
daytotal.filled<-tapply(activity.filled$steps,activity.filled$date,sum)
hist(daytotal.filled,main="Histogram of Total Number of Steps per Day",xlab="Daily steps")
daytotal.filled.mean=mean(daytotal.filled,na.rm=TRUE)
daytotal.filled.median=median(daytotal.filled,na.rm=TRUE)
daytotal.mean
daytotal.filled.mean
daytotal.filled.median
daytotal.median
